初めてのPerlの演習問題です。

***第1章***　Perl入門
1.1:Hello,worldプログラムをタイプ入力して、実際に動かす
1.2:コマンドプロンプトからperldoc -u -f atan2というコマンドを実行し、その出力を見る
1.3:1.1のサンプルをタイプ入力し、何が表示されるか見てみる

***第2章***　スカラーデータ
2.1:半径12.5の円の円周の長さを求めるプログラムを書く
2.2:2.1のプログラムを改良し、プロンプトを表示して、プログラムを起動した人から半径を入力してもらうようにする
2.3:2.2のプログラムを改良して、ユーザが0より小さい数を入力した場合は、0を半径として使うようにする
2.4:プロンプトを表示し、数を2個読み込んで、それらの席を表示するプログラムを書く
2.5:プロンプトを表示して文字列と数を別々に読み込み、その文字列を1行に1つずつ、数で指定された回数だけ繰り返して表示するプログラムを書く


***第3章***　リストと配列
3.1:文字列のリストを1行に1個ずつ入力の終わりになるまで読み込み、そのリストを逆順に表示するプログラムを書く
3.2:数のリストを1行に1個ずつ入力のおわrにになるまで読み込み、いかに示した人名のリストの田舎から、数に対応する人名を表示するプログラムを書く
    fred betty barney dino wilma pebles bamm-bamm
3.3:文字列のリストを1行に1個ずつ入力の終わりまで読み込み、読み込んだ文字列をASCIIコード順に表示するプログラムを書く

***第4章***　サブルーチン
4.1:数値のリストを受け取り、その合計を返すサブルーチン&totalを書く
4.2:4.1を利用して、1から1000までの合計を求めるプログラムを書く

***第5章***　ハッシュ
5.1:ユーザから名前を入力してもらい、その人の姓を表示するプログラムを書く。
5.2:一連の単語を1行に1個ずつファイルの終わりになるまで読み込み、各単語が何回出現したかを表示するプログラムを書く


***第6章***　入出力の基本
6.1:catのような振る舞いをするプログラムを書く。ただし、出力を逆順に行う。
6.2:文字列のリストを1行に1個ずつ別々に読み込み、その文字列を20文字幅のカラムに右寄せで表示するプログラムを書く。目盛り付きのものさしも出力すること。
6.3:6.2のプログラムを改造し、ユーザがカラムの幅を指定できるようにする。

***第7章***　正規表現の基本
7.1:fredを含むような全ての文字列にマッチするパターンを作成してテストする
7.2:少なくとも1個のaの後ろに、任意個のbが続くような部分を持った、すべての文字列にマッチするパターンを作成してテストする
7.3:任意個の逆スラッシュの後ろに、任意個のアスタリスクが続くような部分を持った、すべての文字列にマッチするパターンを作成してテストする
7.4:wilmaを含むような全ての入力行を表示するプログラムを新たに書く
7.5:wilmaとfredの両方が含まれている行を表示するプログラムを書く

***第8章***　正規表現の詳細
8.1:7章のプログラムを使って、fredまたはwilmaがあり、次に何個かの空白文字があり、その後ろにflintstoneがあるような行だけにマッチするパターンを作成してテストする
8.2:以下のパターンはどんな問題を解こうとしているのか
    /"([^"]*)"/
    /^0?[0-3]?[0-7]{1,2}$/
    /^\b[\w.]{1,12}\b$/
8.3:スカラー変数名だけを含むような文字列にマッチするパターン（$fred,$barney,$_など)を作成してテストする
8.4:同じワードが連続して2回以上出現する行にマッチするパターンを作成してテストする
    ex.I think that that is the problem.

***第9章***　正規表現の利用法
9.1:$whatに入っているものが3回連続して現れるものにマッチするようなパターンを書く
9.2:perlfunc.podのファイルの中を探し、=itemで始まり、次に何個かの空白文字が続き、さらにperl識別子名を見つけ出すプログラムを書く。
＊perl識別子名：英文字と文字と寡占で構成され、先頭が数字以外の名前
9.3:9.2のプログラムを改良して、=item行に3回以上現れた識別子名だけを、現れた回数と共に表示する

***第10章***　さまざまな制御構造
10.1:1から100までの間から選んだ秘密の数を、ユーザに当ててもらうプログラムを書く。ユーザがquitまたはexitと入力したり、空行を入力、数が当たった場合はプログラムを終了する。

***第11章***　ファイルハンドルとファイルテスト
11.1:ユーザから入力ファイル名、出力ファイル名、サーチパターン、置き換え文字列を入力してもらうようなプログラムを書く。入力ファイルを読み込み、見つかったサーチパターンを全て置き換え文字列に置き換え出力ファイルへ書き出す。
11.2:コマンドラインからファイル名のリストを受け取り、その１つ１つにおいて読み出し可能か、書き込み可能か、実行可能か、存在しないか表示するプログラムを書く。
11.3:コマンドラインからファイル名のリストを受け取り、そのうち元も古いファイル名とその古さを日数単位で表示するプログラムを書く。

***第12章***　ディレクトリ操作
12.1:ユーザからディレクトリ名を入力してもらい、そのディレクトリに移動、そのディレクトリの内容（ドットで始まるファイル名を除く）をアルファベット順に表示するプログラムを書く。
12.2:12.1のプログラムを改造して、ドット以外で始まるものだけでなく、すべてのファイルを表示するようにする。
12.3:ディレクトリハンドルとグロブの両方で12.2を書く。（12.2で書いていない手法を試す）

***第13章***　ファイルとディレクトリの取り扱い
13.1:rmと同じ働きをするプログラムを書く
13.2:mvと同じ働きをするプログラムを書く
13.3:lnと同じ働きをするプログラムを書く（ハードリンク）
13.4:13.3のプログラムを改造して、-sスイッチを指定した場合はシンボリックリンクを作成するようにする
13.5:カレントディレクトリに存在するすべてのシンボリックリンクを探し出し、その値を表示するプログラムを書く

***第14章***　プロセス管理
14.1:ルートディレクトリに移動してからls -lを実行し、そのディレクトリの詳細形式のディレクトリリストを表示するプログラムを書く
14.2:13.1のプログラムを改造し、コマンドの出力をカレントディレクトリのls.outに、エラー出力をls.errに出力する
14.3:dateコマンドの出力を解析し、今日が何曜日かを調べるプログラムを書く

***第15章***　文字列処理とソート
15.1:数値のリストを読み込み、それを数値としてソートし、右寄せで表示するプログラムを書く（数字のリストはnumbersに保存)
15.2:ハッシュデータを姓のアルファベット順（大文字小文字は区別しない）でソートして表示するプログラムを書く
15.3:ユーザから与えられた文字列の中から、与えられた部分文字列が現れる場所をすべて探しだして、その位置を表示するプログラムを書く

***第16章***

***第17章***